//
// Created by Banner on 4/13/2018.
//

#include <Bitboard.h>

#ifndef CHESS_DATAUTILITYBITBOARDS_H
#define CHESS_DATAUTILITYBITBOARDS_H

namespace utility_bb {
    const bb::Bitboard columns[64] = {
            0x0101010101010101, 0x0202020202020202, 0x0404040404040404, 0x0808080808080808, 0x1010101010101010, 0x2020202020202020, 0x4040404040404040, 0x8080808080808080, 0x0101010101010101, 0x0202020202020202, 0x0404040404040404, 0x0808080808080808, 0x1010101010101010, 0x2020202020202020, 0x4040404040404040, 0x8080808080808080, 0x0101010101010101, 0x0202020202020202, 0x0404040404040404, 0x0808080808080808, 0x1010101010101010, 0x2020202020202020, 0x4040404040404040, 0x8080808080808080, 0x0101010101010101, 0x0202020202020202, 0x0404040404040404, 0x0808080808080808, 0x1010101010101010, 0x2020202020202020, 0x4040404040404040, 0x8080808080808080, 0x0101010101010101, 0x0202020202020202, 0x0404040404040404, 0x0808080808080808, 0x1010101010101010, 0x2020202020202020, 0x4040404040404040, 0x8080808080808080, 0x0101010101010101, 0x0202020202020202, 0x0404040404040404, 0x0808080808080808, 0x1010101010101010, 0x2020202020202020, 0x4040404040404040, 0x8080808080808080, 0x0101010101010101, 0x0202020202020202, 0x0404040404040404, 0x0808080808080808, 0x1010101010101010, 0x2020202020202020, 0x4040404040404040, 0x8080808080808080, 0x0101010101010101, 0x0202020202020202, 0x0404040404040404, 0x0808080808080808, 0x1010101010101010, 0x2020202020202020, 0x4040404040404040, 0x8080808080808080,
    };

    const bb::Bitboard rows[64] = {
            0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  0xFF, 0xFF, 0xFF00, 0xFF00, 0xFF00, 0xFF00, 0xFF00, 0xFF00, 0xFF00, 0xFF00, 0xFF0000, 0xFF0000, 0xFF0000, 0xFF0000, 0xFF0000, 0xFF0000, 0xFF0000, 0xFF0000, 0xFF000000, 0xFF000000, 0xFF000000, 0xFF000000, 0xFF000000, 0xFF000000, 0xFF000000, 0xFF000000, 0xFF00000000, 0xFF00000000, 0xFF00000000, 0xFF00000000, 0xFF00000000, 0xFF00000000, 0xFF00000000, 0xFF00000000, 0xFF0000000000, 0xFF0000000000, 0xFF0000000000, 0xFF0000000000, 0xFF0000000000, 0xFF0000000000, 0xFF0000000000, 0xFF0000000000, 0xFF000000000000, 0xFF000000000000, 0xFF000000000000, 0xFF000000000000, 0xFF000000000000, 0xFF000000000000, 0xFF000000000000, 0xFF000000000000, 0xFF00000000000000, 0xFF00000000000000, 0xFF00000000000000, 0xFF00000000000000, 0xFF00000000000000, 0xFF00000000000000, 0xFF00000000000000, 0xFF00000000000000,
    };

    const bb::Bitboard diag[64] = {
            0x8040201008040201, 0x80402010080402, 0x804020100804, 0x8040201008, 0x80402010, 0x804020, 0x8040, 0x80, 0x4020100804020100, 0x8040201008040201, 0x80402010080402, 0x804020100804, 0x8040201008, 0x80402010, 0x804020, 0x8040, 0x2010080402010000, 0x4020100804020100, 0x8040201008040201, 0x80402010080402, 0x804020100804, 0x8040201008, 0x80402010, 0x804020, 0x1008040201000000, 0x2010080402010000, 0x4020100804020100, 0x8040201008040201, 0x80402010080402, 0x804020100804, 0x8040201008, 0x80402010, 0x0804020100000000, 0x1008040201000000, 0x2010080402010000, 0x4020100804020100, 0x8040201008040201, 0x80402010080402, 0x804020100804, 0x8040201008, 0x0402010000000000, 0x0804020100000000, 0x1008040201000000, 0x2010080402010000, 0x4020100804020100, 0x8040201008040201, 0x80402010080402, 0x804020100804, 0x0201000000000000, 0x0402010000000000, 0x0804020100000000, 0x1008040201000000, 0x2010080402010000, 0x4020100804020100, 0x8040201008040201, 0x80402010080402, 0x0100000000000000, 0x0201000000000000, 0x0402010000000000, 0x0804020100000000, 0x1008040201000000, 0x2010080402010000, 0x4020100804020100, 0x8040201008040201
    };

    const bb::Bitboard antiDiag[64] = {
            0x01, 0x0102, 0x010204, 0x01020408, 0x0102040810, 0x010204081020, 0x01020408102040, 0x0102040810204080, 0x0102, 0x010204, 0x01020408, 0x0102040810, 0x010204081020, 0x01020408102040, 0x0102040810204080, 0x0204081020408000, 0x010204, 0x01020408, 0x0102040810, 0x010204081020, 0x01020408102040, 0x0102040810204080, 0x0204081020408000, 0x0408102040800000, 0x01020408, 0x0102040810, 0x010204081020, 0x01020408102040, 0x0102040810204080, 0x0204081020408000, 0x0408102040800000, 0x0810204080000000, 0x0102040810, 0x010204081020, 0x01020408102040, 0x0102040810204080, 0x0204081020408000, 0x0408102040800000, 0x0810204080000000, 0x1020408000000000, 0x010204081020, 0x01020408102040, 0x0102040810204080, 0x0204081020408000, 0x0408102040800000, 0x0810204080000000, 0x1020408000000000, 0x2040800000000000, 0x01020408102040, 0x0102040810204080, 0x0204081020408000, 0x0408102040800000, 0x0810204080000000, 0x1020408000000000, 0x2040800000000000, 0x4080000000000000, 0x0102040810204080, 0x0204081020408000, 0x0408102040800000, 0x0810204080000000, 0x1020408000000000, 0x2040800000000000, 0x4080000000000000, 0x8000000000000000
    };
}

#endif //CHESS_DATAUTILITYBITBOARDS_H
